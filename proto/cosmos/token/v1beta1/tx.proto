syntax = "proto3";
package cosmos.token.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/token/types";

service Msg {
    // NewToken fines a method for newing coins
    rpc NewToken(MsgNewToken) returns (MsgNewTokenResponse);

    // InfateToken defines a method for inflating token.
    rpc InflateToken(MsgInflateToken) returns (MsgInflateTokenResponse);

    // BurnToken defines a method for burning coins
    rpc BurnToken(MsgBurnToken) returns (MsgBurnTokenResponse);
}

// MsgNewToken represents a message to new coins
message MsgNewToken {
    option (gogoproto.equal)           = false;
    option (gogoproto.goproto_getters) = false;
    string   from_address                    = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
    string   to_address                      = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
    uint64   decimals =3 [(gogoproto.moretags) = "yaml:\"decimals\""];
    cosmos.base.v1beta1.Coin amount = 4
    [(gogoproto.nullable) = false, (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",(gogoproto.moretags) = "yaml:\"amount\""];
 }

// MsgNewTokenResponse defines the Msg/NewToken response type.
message MsgNewTokenResponse { }

// MsgInflateToken represents a message to inflate coins
message MsgInflateToken {
    option (gogoproto.equal)           = false;
    option (gogoproto.goproto_getters) = false;
    string   from_address                    = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
    string   to_address                      = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
    cosmos.base.v1beta1.Coin amount = 3
    [(gogoproto.nullable) = false, (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",(gogoproto.moretags) = "yaml:\"amount\""];
}

// MsgNewTokenResponse defines the Msg/NewToken response type.
message MsgInflateTokenResponse { }


// MsgInflateToken represents a message to inflate coins
message MsgBurnToken {
    option (gogoproto.equal)           = false;
    option (gogoproto.goproto_getters) = false;
    string   from_address                    = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
    cosmos.base.v1beta1.Coin amount = 2
    [(gogoproto.nullable) = false, (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",(gogoproto.moretags) = "yaml:\"amount\""];
}

// MsgNewTokenResponse defines the Msg/NewToken response type.
message MsgBurnTokenResponse { }